{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Downloads/GetFreeCourses.Co-Udemy-React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nimport { AuthActions } from '../../store/Auth';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInput = useRef();\n  const passInput = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const email = emailInput.current.value;\n    const password = passInput.current.value;\n\n    if (isLogin) {\n      const signIn = async () => {\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCSzBO2VSRTmaMHZbyAf3vdwa-62cpudIc', {\n          method: 'POST',\n          body: JSON.stringify({\n            email,\n            password,\n            returnSecureToken: true\n          })\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          emailInput.current.value = '';\n          passInput.current.value = '';\n          throw new Error(data.error.message);\n        } else {\n          console.log(data); // AuthActions.Login(data.idToken)\n\n          console.log('everythings ok');\n        }\n      };\n\n      signIn().catch(err => {\n        console.log(err);\n      });\n    } else {\n      const signUp = async () => {\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key= AIzaSyCSzBO2VSRTmaMHZbyAf3vdwa-62cpudIc', {\n          method: 'POST',\n          body: JSON.stringify({\n            email,\n            password,\n            returnSecureToken: true\n          })\n        });\n\n        if (!response.ok) {\n          const data = await response.json();\n          console.log(data.error.message);\n        }\n      };\n\n      signUp().catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"YrU3XwaNvWkZc73ZVJrxxuaGK4Q=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/pro/Downloads/GetFreeCourses.Co-Udemy-React - The Complete Guide (incl Hooks, React Router, Redux)/22 Adding Authentication To React Apps/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","AuthActions","classes","AuthForm","isLogin","setIsLogin","emailInput","passInput","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","email","current","value","password","signIn","response","fetch","method","body","JSON","stringify","returnSecureToken","data","json","ok","Error","error","message","console","log","catch","err","signUp","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react'\nimport { AuthActions } from '../../store/Auth'\nimport classes from './AuthForm.module.css'\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true)\n  const emailInput = useRef()\n  const passInput = useRef()\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState)\n  }\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const email = emailInput.current.value\n    const password = passInput.current.value\n    if (isLogin) {\n      const signIn = async () => {\n        const response = await fetch(\n          'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCSzBO2VSRTmaMHZbyAf3vdwa-62cpudIc',\n          {\n            method: 'POST',\n            body: JSON.stringify({\n              email,\n              password,\n              returnSecureToken: true,\n            }),\n          }\n        )\n        const data = await response.json()\n        if (!response.ok) {\n          emailInput.current.value = ''\n          passInput.current.value = ''\n          throw new Error(data.error.message)\n        } else {\n          console.log(data)\n          // AuthActions.Login(data.idToken)\n          console.log('everythings ok')\n        }\n      }\n      signIn().catch((err) => {\n        console.log(err)\n      })\n    } else {\n      const signUp = async () => {\n        const response = await fetch(\n          'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key= AIzaSyCSzBO2VSRTmaMHZbyAf3vdwa-62cpudIc',\n          {\n            method: 'POST',\n            body: JSON.stringify({\n              email,\n              password,\n              returnSecureToken: true,\n            }),\n          }\n        )\n        if (!response.ok) {\n          const data = await response.json()\n          console.log(data.error.message)\n        }\n      }\n      signUp().catch((err) => {\n        console.log(err)\n      })\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailInput} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passInput} required />\n        </div>\n        <div className={classes.actions}>\n          <button type='submit'>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default AuthForm\n"]},"metadata":{},"sourceType":"module"}